<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->

<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<chapter xml:id="cha-admin" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Managing cloud instances</title>
 <info>
  <abstract>
   <para>
    &abstract_cha_admin;
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec-admin-register">
  <title>Registering instances</title>
  <para>
   Like other &suse; products, &sle; in public clouds has to be registered to
   receive updates. There are different ways to register, depending on the
   image flavor chosen for the instance.
  </para>
  <itemizedlist>
   <listitem>
    <para>
     PAYG instances are registered automatically against the &suse;-operated
     update infrastructure in the cloud framework region, or a
     geographically close region. The
     <systemitem class="service">guestregister.service</systemitem> manages
     the registration on first boot.
    </para>
     <!-- same warning as in sec-intro-plans -->
     <important>
       <title>Do not register PAYG instances with the &scc;</title>
       <para>
         Registering PAYG instances with the &scc; or your own &rmt; server will
         create conflicts that are not easily solved. Only register BYOS instances.
         PAYG instances are automatically registered against the correct update
         server.
       </para>
     </important>
  </listitem>
   <listitem>
    <para>
     BYOS instances have to be registered manually with your &suse; registration
     key. You can register with the cloud framework's &suse; update servers, the
     &scc;, or your own &susemgr; or &rmt; infrastructure.
    </para>
   </listitem>
  </itemizedlist>
   <para>
     There are two different ways to register BYOS instances:
   </para>
   <orderedlist>
     <listitem>
       <para>
         Any BYOS instance can be registered with the &scc; or your own &susemgr; or &rmt;
         infrastructure using <command>&suseconnect;</command>. Refer to <xref
           linkend="sec-admin-suseconnect"/> for instructions.
       </para>
     </listitem>
     <listitem>
       <para>
         BYOS instances with <package>cloud-regionsrv-client</package> version 9.3.0 or higher can
         be registered with the cloud framework's &suse; update servers using
         <command>registercloudguest</command>. Using the cloud framework's update servers will
         result in faster package downloads. Registrations are forwarded from the update server to
         the &scc;, so your cloud instances show up in your &suse; account and count against the
         system count of your subscription. Refer to
         <xref linkend="sec-admin-registercloudguest"/> for instructions.
       </para>
       <important>
         <title><command>registercloudguest</command> limitations</title>
         <para>
           Not all products and flavors can be registered with
           <command>registercloudguest</command>.
         </para>
         <itemizedlist>
           <listitem>
             <para>
               Container host (<literal>chost</literal>) images are optimized for
               container workloads and contain only a few packages outside of the bare
               minimum to make containers run. These images do not contain
               <command>registercloudguest</command>, but you can register instances with
               the &scc; first, install the necessary packages and then register with the
               SUSE-operated update infrastructure in the cloud framework region. Refer
               to <xref linkend="pro-admin-registercloudguest"/> for instructions.
             </para>
           </listitem>
           <listitem>
             <para>
               &slem; (<literal>sle-micro</literal>) 5.1 and 5.2 images do not contain
               <command>registercloudguest</command>. To register an instance, use the command
               <command>transactional-update register</command>. Refer to the <link
                 xlink:href="https://documentation.suse.com/sle-micro/html/SLE-Micro-all/sec-transactional-udate.html#sec-register-command"><citetitle>&slem; Administration Guide</citetitle></link>
               for more information. Images of &slema; 5.3 and later versions include
               <command>registercloudguest</command> and can be registered as described in
               <xref linkend="sec-admin-registercloudguest"/>.
             </para>
           </listitem>
           <listitem>
             <para>
               &susemgr; (<literal>suse-manager</literal>) can only be registered with
               the &scc;.
             </para>
           </listitem>
         </itemizedlist>
       </important>
     </listitem>
   </orderedlist>
   <para>
     In summary, use <command>registercloudguest</command> to register with the
     local cloud update infrastructure to benefit from faster downloads. Use
     <command>&suseconnect;</command> to register with &scc; or your own
     &susemgr; or &rmt; infrastructure.
   </para>

  <sect2 xml:id="sec-admin-registercloudguest">
   <title>Register with <command>registercloudguest</command></title>
    <para>
      To register a BYOS instance with <command>registercloudguest</command>, run:
    </para>
<screen>&prompt.root;<command>registercloudguest</command> -r <replaceable>REGISTRATION_CODE </replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable></screen>
    <para>
      Replace <replaceable>REGISTRATION_CODE</replaceable> with a valid
      registration code. Replace <replaceable>EMAIL_ADDRESS</replaceable> with the
      e-mail address associated with the &suse; account you or your organization
      uses to manage subscriptions.
    </para>
    <para>
      BYOS instances created from images with a datestamp of
      <literal>20220103</literal> or <emphasis>later</emphasis> contain all
      required packages. For BYOS instances created from images with a date stamp
      <emphasis>prior</emphasis> to <literal>20220103</literal>, perform the following steps:
     </para>
     <procedure xml:id="pro-admin-registercloudguest">
       <title>Switching from <command>&suseconnect;</command> to <command>registercloudguest</command></title>
       <step>
         <para>
           Check if the <package>cloud-regionsrv-client</package> package is
           installed:
         </para>
         <screen>&prompt.root;<command>rpm</command> -q cloud-regionsrv-client</screen>
         <para>
           If the package is not installed or older than version 9.3.0, install or
           update it.
         </para>
         <para>
           For instances created from images with a date stamp prior to <literal>20220103</literal>,
           you first have to enable the <literal>Public Cloud Module</literal>. For &sle; 15 SP4,
           run:
         </para>
         <screen>&prompt.root;<command>&suseconnect;</command> -p sle-module-public-cloud/15.4/x86_64</screen>
         <para>
           For other versions or a complete list of modules and their product
           identifiers, run <command>&suseconnect; --list-extensions</command>.
         </para>
         <para>
           Install <package>cloud-regionsrv-client</package>. Depending on your cloud framework,
           you will need some additional packages.
         </para>
         <stepalternatives>
           <step>
             <para>
               For &ec2a; run:
             </para>
<screen>&prompt.root;<command>zypper</command> in cloud-regionsrv-client cloud-regionsrv-client-plugin-ec2 \
 regionServiceClientConfigEC2 regionServiceCertsEC2</screen>
           </step>
           <step>
             <para>
               For &azure; run:
             </para>
<screen>&prompt.root;<command>zypper</command> in cloud-regionsrv-client cloud-regionsrv-client-plugin-azure \
 regionServiceClientConfigAzure regionServiceCertsAzure</screen>
           </step>
           <step>
             <para>For &gce; run:</para>
<screen>&prompt.root;<command>zypper</command> in cloud-regionsrv-client cloud-regionsrv-client-plugin-gce \
 regionServiceClientConfigGCE regionServiceCertsGCE</screen>
           </step>
         </stepalternatives>
       </step>
       <step>
         <para>
           Disconnect your instance from the &scc;:
         </para>
         <screen>&prompt.root;<command>registercloudguest</command> --clean</screen>
         <para>
           Do <emphasis>not</emphasis> use <command>&suseconnect; -d</command>; it will
           no longer work.
         </para>
       </step>
       <step>
         <para>
           Connect the instance to the &suse; update infrastructure in the
           public cloud. Replace <replaceable>REGISTRATION_CODE</replaceable> with a
           valid registration code. Replace <replaceable>EMAIL_ADDRESS</replaceable>
           with the e-mail address associated with the &suse; account you or your
           organization uses to manage subscriptions.
         </para>
         <screen>&prompt.root;<command>registercloudguest</command> -r <replaceable>REGISTRATION_CODE </replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable></screen>
         <para>
           This will only register the base product and any recommended products.
           For instances created from images with a datestamp later than
           <literal>20220103</literal>, it will also set up the repositories for the
           <literal>Public Cloud Module</literal>.
         </para>
       </step>
     </procedure>
  </sect2>

  <sect2 xml:id="sec-admin-suseconnect">
   <title>Register with <command>&suseconnect;</command></title>
   <para>
    To register a BYOS instance with <command>&suseconnect;</command>, run:
   </para>
   <screen>&prompt.root;<command>&suseconnect;</command> -r <replaceable>REGISTRATION_CODE</replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable></screen>
   <para>
    Replace <replaceable>REGISTRATION_CODE</replaceable> with a valid
    registration code. Replace <replaceable>EMAIL_ADDRESS</replaceable> with the
    e-mail address associated with the &suse; account you or your organization
    uses to manage subscriptions.
   </para>
   <para>
    To register with your own registration server, also provide its URL:
   </para>
   <screen>&prompt.root;<command>&suseconnect;</command> -r <replaceable>REGISTRATION_CODE</replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable> --url <replaceable>URL</replaceable></screen>
    <para>
      If the instance was already registered with <command>registercloudguest</command>, perform the
      following steps:
    </para>
    <procedure xml:id="pro-admin-suseconnect">
      <title>Switching from <command>registercloudguest</command> to <command>&suseconnect;</command></title>
       <step>
         <para>
           Disconnect your instance from the SUSE-operated update infrastructure in the cloud
           framework:
         </para>
<screen>&prompt.root;<command>registercloudguest</command> --clean</screen>
       </step>
       <step>
         <para>
           Uninstall the <package>cloud-regionsrv-client</package> package and its dependencies:
         </para>
<screen>&prompt.root;<command>zypper</command> rm -u cloud-regionsrv-client</screen>
       </step>
       <step>
         <para>
           Clean up the registration status:
         </para>
<screen>&prompt.root;<command>&suseconnect;</command> --cleanup --url https://scc.suse.com</screen>
       </step>
       <step>
         <para>
           Register the instance with <command>&suseconnect;</command>.
         </para>
         <stepalternatives>
           <step>
             <para>
               To connect the instance to the &scc;, run:
             </para>
             <screen>&prompt.root;<command>&suseconnect;</command> -r <replaceable>REGISTRATION_CODE</replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable></screen>
           </step>
           <step>
             <para>
               To connect the instance to the your own registration server, run:
             </para>
             <screen>&prompt.root;<command>&suseconnect;</command> -r <replaceable>REGISTRATION_CODE</replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable> --url <replaceable>URL</replaceable></screen>
           </step>
         </stepalternatives>
       </step>
     </procedure>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-admin-deregister">
  <title>Deregister instances</title>
  <para>
   If you are to decommission an instance, remember to deregister it before
   termination. This will ensure that the system gets removed from the &scc; and
   is no longer counted against your subscription.
  </para>
  <procedure>
   <step>
    <para>
     Run <command>&suseconnect; --status-text</command> to check the registration
     status.
    </para>
   </step>
   <step>
    <para>
     If the system is registered, check if the file
     <filename>/var/log/guestregister</filename> exists. This usually indicates
     the system was registered with <command>registercloudguest</command>.
    </para>
   </step>
   <step>
    <para>
     Deregister the system:
    </para>
    <stepalternatives>
     <step>
      <para>
       If a system was registered with <command>registercloudguest</command>,
       run:
      </para>
      <screen>&prompt.root;<command>registercloudguest</command> <option>--clean</option></screen>
     </step>
     <step>
      <para>
       If a system was registered with <command>&suseconnect;</command>, run:
      </para>
      <screen>&prompt.root;<command>&suseconnect;</command> <option>-d</option></screen>
      <para>
       If this does not work, make sure the package
       <package>cloud-regionsrv-client</package> is not installed. It may have
       been installed after the system was registered.
      </para>
     </step>
    </stepalternatives>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="hardening">
  <title>Hardening instances</title>
  <para>
   To improve overall security, &suse; provides hardened images of some
   products. The images are hardened using <phrase
    role="product">&openscap;</phrase>, a collection of open source tools that
   implement the <systemitem class="protocol">Security Content Automation
    Protocol (SCAP)</systemitem> maintained by the <orgname>National Institute
     of Standards and Technology (NIST)</orgname>. <phrase
      role="product">&openscap;</phrase> supports automated configuration,
   vulnerability and patch checking, technical control compliance activities,
   and security measurement.
  </para>
  <para>
   To harden a system, <phrase role="product">&openscap;</phrase> uses security
   rules that define certain security measures. Multiple rules can be combined
   into profiles. For more information, refer to the &openscap; documentation
   at <link xlink:href="https://www.open-scap.org/resources/documentation/"/>.
  </para>

  <sect2>
   <title>Pre-hardening</title>
   <para>
    Hardened images are pre-hardened to the extent they can safely be hardened
    without causing problems in public cloud frameworks. Certain rules can only
    be applied after instance creation, for example:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Rules that require having passwords set up. Passwords would have to be
      public if configured during the image build. This would defeat the purpose of
      a secret password.
     </para>
    </listitem>
    <listitem>
     <para>
      Rules that affect the network configuration. Networking is set up during
      instance creation, therefore it is not possible to limit access during
      image build.
     </para>
    </listitem>
    <listitem>
     <para>
      Rules for custom partitioning. &suse;'s public cloud images are
      partitioned to meet the requirements of the framework in which they are
      released. If your system needs to meet standards that require separate
      file systems for given directories, we recommend that you build your own
      images and use LVM or move those directories onto attached disks to get
      the strictest data separation possible.
     </para>
    </listitem>
    <listitem>
     <para>
      Rules to remove packages. &suse;'s public cloud images cater to a wide range
      of use cases. Even if the number of packages is limited, it is impossible
      to determine what packages an instance requires.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
  <sect2>
   <title>Avialable <phrase role="product">&openscap;</phrase> profiles </title>
   <para>
    After instance creation, you can use the installed
    <package>openscap</package> packages to complete the hardening process using
    any of the following profiles:
   </para>
   <variablelist>
    <!-- <title>&openscap; Profiles</title> -->
    <varlistentry>
     <term>Standard (<link xlink:href="https://github.com/ComplianceAsCode/content/blob/master/products/sle15/profiles/standard.profile"><filename>standard.profile</filename></link>)</term>
     <listitem>
      <para>
       Basic <phrase role="product">&openscap;</phrase> system security
       standard.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>&cisa; Server Level 2 (<link xlink:href="https://github.com/ComplianceAsCode/content/blob/master/products/sle15/profiles/cis.profile"><filename>cis.profile</filename></link>)</term>
     <listitem>
      <para>
       The <systemitem>&cis; Server Level 2</systemitem> profile is considered
       to be <quote>defense in depth</quote> and is intended for environments
       where security is paramount. The recommendations associated with this
       profile can have an adverse effect on your organization if not
       implemented appropriately or without due care. For more information,
       refer to <link xlink:href="https://www.cisecurity.org"/>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Department of Defense &stiga; (<link xlink:href="https://github.com/ComplianceAsCode/content/blob/master/products/sle15/profiles/stig.profile"><filename>stig.profile</filename></link>)</term>
     <listitem>
      <para>
       The <orgname>&disa;</orgname> publishes <citetitle>&stig;s
        (&stiga;s)</citetitle> for the <orgname>Department of Defense</orgname>.
       The &stiga; profile replaces the previous &cisa; Level 3 profile and
       provides all recommendations that are &stiga;-specific. Overlap of
       recommendations from other profiles, i.e. &cisa; Level 1 and Level 2,
       are present in the &stiga; profile as applicable. For more information,
       refer to <link xlink:href="https://public.cyber.mil/stigs/"/>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>&hipaaa; Security Rule (<link xlink:href="https://github.com/ComplianceAsCode/content/blob/master/products/sle15/profiles/hipaa.profile"><filename>hipaa.profile</filename></link>)</term>
     <listitem>
      <para>
       In response to the <citetitle>&hipaa; (&hipaaa;)</citetitle> of 1996, the
       <orgname>U.S. Department of Health and Human Services</orgname> developed
       <citetitle>Security Standards for the Protection of Electronic Protected
        Health Information</citetitle>, commonly known as the <systemitem>HIPAA
         Security Rule</systemitem>. It establishes national standards to protect
       individuals' electronic personal health information (e-PHI) that is
       created, received, used, or maintained by a covered entity. For more
       information, refer to <link
        xlink:href="https://www.hhs.gov/hipaa/for-professionals/security/index.html"/>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>&pcidss; (<link xlink:href="https://github.com/ComplianceAsCode/content/blob/master/products/sle15/profiles/pci-dss.profile"><filename>pci-dss.profile</filename></link>)</term>
     <listitem>
      <para>
       The <citetitle>&pcidss; (&pcidssa;)</citetitle> is a set of requirements
       to guide merchants to protect cardholder data. It is  maintained by the
       <orgname>PCI Security Standards Council (SSC)</orgname> that was founded
       by all five major credit card brands Visa, MasterCard, American Express,
       Discover, and JCB. For more information, refer to <link
        xlink:href="https://www.pcisecuritystandards.org/document_library"/>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    All profile files are available in the <link
     xlink:href="https://github.com/ComplianceAsCode/content/tree/master/products/sle15/profiles">ComplianceAsCode</link>
    repository.
   </para>
   <para>
    For a complete list of rules that have been applied during pre-hardening,
    refer to <link
     xlink:href="https://github.com/ComplianceAsCode/content/blob/master/products/sle15/profiles/pcs-hardening.profile"><filename>pcs-hardening.profile</filename></link>.
    This profile is a combination of the <literal>&stiga;</literal> and
    <literal>&cisa;</literal> profiles minus rules that can only be applied
    after instance creation.
   </para>
   <para>
    Images of &sles4sap; are hardened using a modified version of the profile
    called <link xlink:href="https://github.com/ComplianceAsCode/content/blob/master/products/sle15/profiles/pcs-hardening-sap.profile"><filename>pcs-hardening-sap.profile</filename></link>.
    Users may need to make additional modifications to the system configuration
    depending on individual application needs.
   </para>
   <important>
    <title>Recommended profiles</title>
    <para>
     &suse; recommends using either the <literal>&cisa;</literal> or the
     <literal>&stiga;</literal> profile. You can use other profiles at your own
     discretion.
    </para>
   </important>
   <!--
    <para>
    Other policies are available on the &openscap; website at <link
    xlink:href="https://www.open-scap.org/security-policies/choosing-policy/"/>.
    </para>
   -->
  </sect2>
  <sect2>
   <title>Hardening instances with <phrase role="product">&openscap;</phrase></title>
   <para>
    To evaluate an instance, you can run:
   </para>
   <screen>&prompt.sudo;<command>oscap</command> xccdf eval \
    --profile <replaceable>stig</replaceable><co xml:id="co-eval-profile"/> \
    --results <replaceable>/tmp/results.xml</replaceable><co xml:id="co-eval-results"/> \
    --report <replaceable>/tmp/report.html</replaceable><co xml:id="co-eval-report"/> \
    --stig-viewer <replaceable>/tmp/stigviewer.xml</replaceable><co xml:id="co-eval-viewer"/> \
    <replaceable>/usr/share/xml/scap/ssg/content/ssg-sle15-ds-1.2.xml</replaceable><co xml:id="co-eval-ssg"/></screen>
   <calloutlist>
    <callout arearefs="co-eval-profile">
     <para>
      Specifies the profile to use, e.g. <literal>stig</literal> or
      <literal>cis</literal>.
     </para>
    </callout>
    <callout arearefs="co-eval-results">
     <para>
      Saves the results of the evaluation to <filename>/tmp/results.xml</filename>
     </para>
    </callout>
    <callout arearefs="co-eval-report">
     <para>
      Generates a HTML report called <filename>/tmp/report.html</filename> in
      addition to the results in XML.
     </para>
    </callout>
    <callout arearefs="co-eval-viewer">
     <para>
      Saves the results to <filename>/tmp/stigviewer.xml</filename>, which can
      be imported into the <literal>DISA STIG Viewer</literal>. Refer to <link
       xlink:href="https://public.cyber.mil/stigs/srg-stig-tools/"/> for
      information about DISA STIG Viewer.
     </para>
    </callout>
    <callout arearefs="co-eval-ssg">
     <para>
      <literal>Scap Security Guide</literal> (SSG) policy file in the
      <literal>datastream</literal> (ds) format. Make sure to select the correct
      version for your instance. To list all available policies, run:
      <command>ls -1 /usr/share/xml/scap/ssg/content/ssg-*-ds.xml</command>.For
      more information about a particular policy, run
      <command>oscap info</command> on the file.
     </para>
    </callout>
   </calloutlist>
   <para>
    The evaluation process usually takes a few minutes, depending on the number
    of selected rules.
   </para>
   <para>
    To remediate an instance, add the <parameter>--remediate</parameter>
    parameter:
   </para>
   <screen>&prompt.sudo;<command>oscap</command> xccdf eval --remediate\
    --profile <replaceable>stig</replaceable> \
    --results <replaceable>/tmp/results.xml</replaceable> \
    --report <replaceable>/tmp/report.html</replaceable> \
    --stig-viewer <replaceable>/tmp/stigviewer.xml</replaceable> \
    <replaceable>/usr/share/xml/scap/ssg/content/ssg-sle15-ds-1.2.xml</replaceable></screen>
  </sect2>
  <sect2>
   <title>More information</title>
   <para>
    For more information on how to harden your &sle; system with <phrase
     role="product">&openscap;</phrase>, refer to the article
    <link xlink:href="https://documentation.suse.com/compliance/all/html/SLES-openscap/article-openscap.html"><citetitle>Hardening
     SUSE Linux Enterprise with OpenSCAP</citetitle></link>. For general
    information on <phrase role="product">&openscap;</phrase>, refer to the <link
     xlink:href="https://www.open-scap.org/security-policies/scap-security-guide/"><citetitle>SCAP
      Security Guide</citetitle></link>.
   </para>
  </sect2>
 </sect1>
</chapter>
